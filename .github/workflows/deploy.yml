name: Build and Deploy

on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    runs-on: ubuntu-latest

    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: true
          prerelease: false

  build:
    needs: create_release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        target:
          [
            x86_64-unknown-linux-gnu,
            x86_64-pc-windows-msvc,
            x86_64-apple-darwin,
            aarch64-apple-darwin,
          ]

    steps:
      - name: Set up Deno
        uses: denolib/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Check out repository
        uses: actions/checkout@v2
        with:
          repository: mactkg/slack-icon-downloader

      - name: Build binary
        run: deno compile --target=${{ matrix.target }} --output=build/slack-icon-downloader-${{ matrix.target }} main.ts

      - name: Compress binary
        run: |
          if [ "${{ matrix.target }}" = "x86_64-pc-windows-msvc" ]; then
            tar -czvf build/slack-icon-downloader-${{ matrix.target }}.tar.gz -C build slack-icon-downloader-${{ matrix.target }}.exe
          else
            tar -czvf build/slack-icon-downloader-${{ matrix.target }}.tar.gz -C build slack-icon-downloader-${{ matrix.target }}
          fi

      - name: Upload binary
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          asset_path: build/slack-icon-downloader-${{ matrix.target }}.tar.gz
          asset_name: slack-icon-downloader-${{ matrix.target }}.tar.gz
          asset_content_type: application/gzip
